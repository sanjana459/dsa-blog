// data/topics.js

export const topics = [
  {
    name: 'Array/List – Coding Exercises (LeetCode + FAANG Questions)',
    slug: 'array-list-coding-exercises-leetcode-faang-questions',
    description: 'Practice array/list problems',
    daysDone: 2,
    totalDays: 8,
  },
  {
    name: 'Dictionary – Coding Exercises',
    slug: 'dictionary-coding-exercises',
    description: 'Practice maps & key-value stores',
    daysDone: 0,
    totalDays: 6,
  },
  {
    name: 'Tuple – Immutable Sequence Exercises',
    slug: 'tuple-immutable-sequence-exercises',
    description: 'Learn how tuples work',
    daysDone: 0,
    totalDays: 6,
  },

  {
    name: 'Linked List – Basic & Advanced',
    slug: 'linked-list-basic-advanced',
    description: 'Implement singly & doubly linked lists, solve pointer problems',
    daysDone: 0,
    totalDays: 45,
  },
  {
    name: 'Stack & Queue – Data Structures',
    slug: 'stack-queue-data-structures',
    description: 'LIFO vs FIFO exercises & applications',
    daysDone: 0,
    totalDays: 15,
  },
  {
    name: 'Tree – Binary & Balanced Trees',
    slug: 'tree-binary-balanced-trees',
    description: 'Preorder, inorder, postorder, AVL, Red-Black trees',
    daysDone: 0,
    totalDays: 6,
  },
  {
    name: 'Graph – BFS & DFS',
    slug: 'graph-bfs-dfs',
    description: 'Breadth-first and Depth-first traversal, shortest path',
    daysDone: 0,
    totalDays: 5,
  },
  {
    name: 'Hash Table – Implementation & Collision',
    slug: 'hash-table-implementation-collision',
    description: 'Design hash functions, handle collisions (chaining, open addressing)',
    daysDone: 0,
    totalDays: 4,
  },
  {
    name: 'Sorting Algorithms – O(n log n) & O(n²)',
    slug: 'sorting-algorithms-on-logn-on2',
    description: 'Quick Sort, Merge Sort, Heap Sort, Bubble, Insertion, Selection',
    daysDone: 0,
    totalDays: 5,
  },
  {
    name: 'Searching Algorithms – Binary & Linear',
    slug: 'searching-algorithms-binary-linear',
    description: 'Divide and conquer vs. linear scan',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Dynamic Programming – Fundamentals',
    slug: 'dynamic-programming-fundamentals',
    description: 'Memoization, tabulation, common DP patterns',
    daysDone: 0,
    totalDays: 7,
  },
  {
    name: 'Greedy Algorithms – Patterns & Proofs',
    slug: 'greedy-algorithms-patterns-proofs',
    description: 'Activity selection, coin change, Huffman coding',
    daysDone: 0,
    totalDays: 5,
  },
  {
    name: 'Two Pointers & Sliding Window',
    slug: 'two-pointers-sliding-window',
    description: 'Subarray sums, longest substring without repeating characters',
    daysDone: 0,
    totalDays: 4,
  },
  {
    name: 'Recursion & Backtracking',
    slug: 'recursion-backtracking',
    description: 'Permutations, combinations, N-Queens, Sudoku solver',
    daysDone: 0,
    totalDays: 6,
  },
  {
    name: 'Bit Manipulation – Tricks & Techniques',
    slug: 'bit-manipulation-tricks-techniques',
    description: 'XOR, bitwise shifts, subsets using bits',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Mathematical Puzzles – GCD, LCM, Primes',
    slug: 'mathematical-puzzles-gcd-lcm-primes',
    description: 'Euclidean algorithm, prime sieves, modular arithmetic',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Sliding Window Maximum & Deque',
    slug: 'sliding-window-maximum-deque',
    description: 'Use deque for O(n) window maximum/minimum',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Union Find (Disjoint Set) – Applications',
    slug: 'union-find-disjoint-set-applications',
    description: 'Connected components, cycle detection',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Topological Sort – DAGs',
    slug: 'topological-sort-dags',
    description: 'Kahn’s algorithm, DFS-based sort',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Trie – Prefix Trees',
    slug: 'trie-prefix-trees',
    description: 'Implement insertion, search, autocomplete',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Heaps – Min-Heap & Max-Heap',
    slug: 'heaps-min-heap-max-heap',
    description: 'Heapify, priority queue operations',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Graph – Shortest Path (Dijkstra & Bellman-Ford)',
    slug: 'graph-shortest-path-dijkstra-bellman-ford',
    description: 'Weighted graphs, negative edges',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Graph – Minimum Spanning Tree',
    slug: 'graph-minimum-spanning-tree',
    description: 'Kruskal’s, Prim’s algorithms',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Graph – Floyd-Warshall & All Pairs Shortest Path',
    slug: 'graph-floyd-warshall-all-pairs-shortest-path',
    description: 'Dynamic programming on graphs',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Matrix – Traversal & Rotation',
    slug: 'matrix-traversal-rotation',
    description: 'Spiral order, rotate image',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Matrix – Path Counting & Games',
    slug: 'matrix-path-counting-games',
    description: 'Number of paths in grid, board game DP',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'String – KMP & Rabin-Karp',
    slug: 'string-kmp-rabin-karp',
    description: 'Pattern matching, rolling hash',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'String – Trie & Autocomplete',
    slug: 'string-trie-autocomplete',
    description: 'Prefix-tree for strings (overlap with Trie above)',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'String – Z-Algorithm & Manacher’s',
    slug: 'string-z-algorithm-manacher',
    description: 'Find palindromes, pattern search in O(n)',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Combinatorics – Subsets & Permutations',
    slug: 'combinatorics-subsets-permutations',
    description: 'Generate subsets, solve combinatorial identities',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Combinatorics – Catalan Numbers',
    slug: 'combinatorics-catalan-numbers',
    description: 'Dyck paths, bracket sequence count',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Game Theory – Grundy Numbers',
    slug: 'game-theory-grundy-numbers',
    description: 'Impartial games, mex function',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Geometry – Convex Hull & Rotating Calipers',
    slug: 'geometry-convex-hull-rotating-calipers',
    description: 'Graham scan, Jarvis march',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Advanced Data Structures – Segment Tree',
    slug: 'advanced-data-structures-segment-tree',
    description: 'Range queries, point updates',
    daysDone: 0,
    totalDays: 4,
  },
  {
    name: 'Advanced Data Structures – Fenwick Tree',
    slug: 'advanced-data-structures-fenwick-tree',
    description: 'Binary indexed tree for prefix sums',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Advanced Data Structures – Splay & Treap',
    slug: 'advanced-data-structures-splay-treap',
    description: 'Self-adjusting BSTs, randomized BSTs',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Advanced Data Structures – Heavy Light Decomposition',
    slug: 'advanced-data-structures-heavy-light-decomposition',
    description: 'Tree chain decomposition for path queries',
    daysDone: 0,
    totalDays: 3,
  },
  {
    name: 'Advanced Graph – Bridge & Articulation Point',
    slug: 'advanced-graph-bridge-articulation-point',
    description: 'Tarjan’s algorithms',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'Advanced Graph – 2-SAT & SCC',
    slug: 'advanced-graph-2-sat-scc',
    description: 'Kosaraju’s, Tarjan’s SCC algorithm',
    daysDone: 0,
    totalDays: 2,
  },
  {
    name: 'The Wild West',
    slug: 'the-wild-west',
    description: 'Miscellaneous advanced topics',
    daysDone: 0,
    totalDays: 2,
  }
];
